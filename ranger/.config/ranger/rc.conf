# Settings
# ----------------------------------------

set automatically_count_files true
set autosave_bookmarks true
set autoupdate_cumulative_size false
set cd_bookmarks true
set clear_filters_on_dir_change false
set collapse_preview true
set colorscheme default
set column_ratios 1,3,4
set confirm_on_delete multiple
set dirname_in_tabs false
set display_size_in_main_column true
set display_size_in_status_bar true
set display_tags_in_all_columns true
set draw_progress_bar_in_status_bar true
set draw_borders true
set flushinput true
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp|aux|log|nav|out|snm|toc|synctex\.gz|blg|bbl)$|^lost\+found$|^__(py)?cache__$
set idle_delay 2000
set line_numbers false
set max_console_history_size 50
set max_history_size 20
set metadata_deep_search false
set mouse_enabled true
set open_all_images true
set padding_right true
set preview_directories true
set preview_files true
set preview_images true
set preview_images_method w3m
set preview_max_size 0
set preview_script ~/.config/ranger/scope.sh
set save_console_history true
set show_cursor false
set scroll_offset 8
set shorten_title 3
set show_hidden false
set show_hidden_bookmarks true
set show_selection_in_titlebar true
set sort natural
set sort_case_insensitive true
set sort_directories_first true
set sort_reverse false
set sort_unicode false
set status_bar_on_top true
set tilde_in_titlebar false
set unicode_ellipsis false
set update_title false
set update_tmux_title false
set use_preview_script true
set vcs_aware false
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set viewmode miller
set xterm_alt_key false

# Plugins
# ----------------------------------------
default_linemode devicons

# Aliases
# ----------------------------------------

alias e    edit
alias q    quit
alias q!   quitall
alias qa   quitall
alias qall quitall
alias setl setlocal

alias filter     scout -prt
alias find       scout -aeit
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefiklst

# Keys
# ----------------------------------------

# General
# map V console shell vim%space

# map cW bulkrename %s
# map mkd console mkdir%space
# map sc console shell ln -sT%space
# map D console delete
# map X shell extract %f
# map Z shell tar -cvzf %f.tar.gz %s
# map <C-f> fzf_select
# map <C-l> fzf_locate

# Image
map bgi shell command feh --no-fehbg --bg-scale %s
map bgs shell swaymsg -t command "output * bg `readlink -f %s` fill"
map pr shell convert -rotate 90 %s %s
map pf shell convert -flop %s %s

# Config files
map cfX shell emacsclient ~/.Xresources
map cfa shell emacsclient ~/.config/awesome/rc.lua
map cfe shell emacsclient ~/.emacs.d/config.org
map cfi shell emacsclient ~/.config/i3/config
map cfs shell emacsclient ~/.config/sway/config
map cfr shell emacsclient ~/.config/ranger/rc.conf
map cfx shell emacsclient ~/.xinitrc
map cfz shell emacsclient ~/.zshrc

# Movements
map g? cd /usr/share/doc/ranger
map g/ cd /

map gD cd ~/Desktop
map gM cd /mnt
map gO cd ~/Documents
map gR eval fm.cd(ranger.RANGERDIR)
map gS cd ~/Documents/Repositories/GitHub/Courses/BA3 (Informatique)

map gd cd /dev
map ge cd /etc
map gh cd ~
map gl cd ~/Documents/Programming/LaTeX
map gm cd /media
map go cd /opt
map gp cd ~/Pictures
map gr cd /
map gs cd /srv
map gu cd /usr
map gv cd /var
map gw cd ~/Pictures/Wallpapers

# Documents
map p1s shell lpr -o sides=one-sided %f
map p2s shell lpr -o sides=two-sided-long-edge %f
map MP shell pandoc %f -o %f.pdf
map MX shell xelatex %f
map ML shell latex %f
map TC shell texclear

#Downloading
map ytv console shell youtube-dl -ic%space
map yta console shell youtube-dl -xic%space

# alias yeam="youtube-dl --embed-thumbnail --extract-audio --audio-format mp3 --audio-quality 0 -o '~/Music/%(title)s.%(ext)s'"

# map td tab_new ~/Documents
# map md shell mv %%s ~/Documents
# map Yd shell cp %%s ~/Documents

# # LaTeX

# map tl tab_new ~/Documents/Programming/LaTeX
# map ml shell mv %%s ~/Documents/Programming/LaTeX
# map Yl shell cp %%s ~/Documents/Programming/LaTeX

# # Pictures

# map tp tab_new ~/Pictures
# map mp shell mv %%s ~/Pictures
# map Yp shell cp %%s ~/Pictures

# # School

# map tS tab_new ~/Documents/Repositories/GitHub/Courses/BA3 (Informatique)
# map mS shell mv %%s ~/Documents/Repositories/GitHub/Courses/BA3 (Informatique)
# map YS shell cp %%s ~/Documents/Repositories/GitHub/Courses/BA3 (Informatique)

# Wallpapers

map tw tab_new ~/Pictures/Wallpapers
map mw shell mv %%s ~/Pictures/Wallpapers
map Yw shell cp %%s ~/Pictures/Wallpapers

# Basic Keys
# ----------------------------------------

map     Q quit!
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map <C-r> reset
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal
map ~ set viewmode!

map i display_file
map ? help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell  %%s
map #  console shell -p%space
map s  console shell%space
map r  chain draw_possible_programs; console open_with%%space
map f  console find%space
map cd console cd%space

# Line Mode
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mp linemode permissions
map Ms linemode sizemtime
map Mt linemode metatitle

# Few more by myself
map cW bulkrename %s

# Tagging / Marking
map t       tag_toggle
map ut      tag_remove
map <any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse

# External Programs
map E  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map yp shell -f echo -n %d/%f | xsel -i; xsel -o | xsel -i -b
map yd shell -f echo -n %d    | xsel -i; xsel -o | xsel -i -b
map yn shell -f echo -n %f    | xsel -i; xsel -o | xsel -i -b

# Filesystem Operations
map =  chmod

map cw console rename%space
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree

map dD console delete

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
# map yt copy mode=toggle

# Searching
map /  console search%space
map n  search_next
map N  search_next forward=False
map ca search_next order=atime
map cc search_next order=ctime
map ci search_next order=mimetype
map cm search_next order=mtime
map cs search_next order=size
map ct search_next order=tag

# Settings

map zI    set flushinput!
map zP    set preview_directories!

map zc    set collapse_preview!
map zd    set sort_directories_first!
map zf    console filter%space
map zh    set show_hidden!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!

# Sorting
map oA chain set sort=atime;     set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oS chain set sort=size;      set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True

map oa chain set sort=atime;     set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map or set sort_reverse!
map os chain set sort=size;      set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oz set sort=random

map dc get_cumulative_size

# Tabs
map <C-n>     tab_new ~
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map tt        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9

# Temporary workarounds
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# Console
# ----------------------------------------

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-left>   eval fm.ui.console.move_word(left=1)
cmap <a-right>  eval fm.ui.console.move_word(right=1)

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# And of course the emacs way
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# # ===================================================================
# # == Taskview Keybindings
# # ===================================================================

# # Movement
# tmap <up>        taskview_move up=1
# tmap <down>      taskview_move down=1
# tmap <home>      taskview_move to=0
# tmap <end>       taskview_move to=-1
# tmap <pagedown>  taskview_move down=1.0  pages=True
# tmap <pageup>    taskview_move up=1.0    pages=True
# tmap <C-d>       taskview_move down=0.5  pages=True
# tmap <C-u>       taskview_move up=0.5    pages=True

# copytmap <UP>       k  <C-p>
# copytmap <DOWN>     j  <C-n> <CR>
# copytmap <HOME>     g
# copytmap <END>      G
# copytmap <C-u>      u
# copytmap <PAGEDOWN> n  f  <C-F>  <Space>
# copytmap <PAGEUP>   p  b  <C-B>

# # Changing priority and deleting tasks
# tmap J          eval -q fm.ui.taskview.task_move(-1)
# tmap K          eval -q fm.ui.taskview.task_move(0)
# tmap dd         eval -q fm.ui.taskview.task_remove()
# tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
# tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
# tmap <delete>   eval -q fm.ui.taskview.task_remove()

# # Basic
# tmap <C-l> redraw_window
# tmap <ESC> taskview_close
# copytmap <ESC> q Q w <C-c>
